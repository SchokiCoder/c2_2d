movement:
{
	-add crouching							.
	-add crouch slide						.
}

world creation
{
	-image to world conversion					.
	 Each pixel is a block.
	 1)   Draw image                        PNG
	 2.1) Assign color codes to block id's  JSON
	 2.2) Set entities                      JSON
	 3)   Compile                           Compiler "Oven"
}

old problems (from c):
{
	-motd is bugged							.
	-unused variable warnings					.
	 (most likely because of -c flag oriented compilation)
}

renaissance:
{
	-rewrite in c2							v
	 minor issues (see compile output)
	-sys/stat.h is already as sys_stat.c2i in libc			v
	-Config.toFile "temp" should be 16 long				v
	 (negative 2 billion is longer than 10)

	-rewrite in c2                                                  v
	 c2c can't recognise array of struct within struct?
	 this problem has been silenced with comments
	 but got TODO marks

        -circular dependencies                                          .
         i thought the module system prevented this from being
         an issue in the first place
         IT'S HAPPENING, OH GOD IT'S HAPPENING!!!

	-apply new naming convention from gui to engine			.
	-replace Points and Rects with SDL equivalents			.
	-replace log sys with SDL_log					?

	-reinstate "First" and "Last" member of enums			?	
	-todo marks							.
	-game.c2/Game.edit (width, height)				.
	 ambigous parameter names

        -import math removed from main.c2 bindings needed               .

	-are sstring/String's still useful with c2's elemsof()		?
	 (can elemsof() work at runtime with heap alloc'd strings?)
	-main.c2/btn_settings_click unsafe use of sstring/String	.
	 add a internal printf to sstring/String, that automatically
	 updates the len, what about size?
	-add shortcuts for sstring methods to gui objects		.
	 and make updateSprite(s) private

	-this thing needs a data-oriented REWORK			.
	 rethink structs and convert into simple ECS

	-set version to 0.1.0						.
}

--- done ---

canceled:
{
	-add image fontmap						x
	 monospcae, utf-8, no rgb image
	 represent ALL characters as filled square except:
	 latin characters, numbers, common special chars ,;.:-_ etc
	 (by including all utf-8 characters we can iterate
	  through the parsed data with the actual character like 'a')

	-remove block-based world building				x
	 add images as maps						
	 In this case, i think a hotswap system for quickly changing
	 maps is needed. So that developing a map as a picture can be
	 easily cut into multiple pictures.
	 Maybe a trigger could be named via a layer name of a XCF-file.
	 Those layers could then be given behavior with a LUA script.
	 A layer could also just be a static thing and in the extending
	 LUA file properties could be given such as "is a liquid" or
	 "not solid".
	 In a lua file you could assign the existing layernames an
	 actual purpose.
	 Or maybe JSON-file?

	 removing block based maps is not going work
	 (without replacing by something very complex)
}

rehab:
{
	-finish Makefile			v
	-fix application metadata		v
	-fix linker error			v
	-Config_save -> Config_to_file		v
	-are debug builds actually valid	v
	 (because o-files are not compiled
	 with -g or -D _DEBUG)
	-same ^ for -Os				v
	-fix segfault				v
	 this is due to not finding the font
	 (has no NULL check lol)
	 actual fix postponed due to obsolesence
	-double free on game start		v
	-add cc sa license to assets		v
}

refactor:
remove typedef from struct
GNU indent messed my pointers up: "muh * ptr"
bool -> int
{
	-engine						v
	-gui						v
	-main						v
}
